// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Next-Auth Models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  refresh_token_expires_in Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Existing Models
model UserApplication {
  id               Int      @id @default(autoincrement())
  name             String
  phoneNumber      String   @unique
  interestedTopics String[]
  privacyConsent   Boolean  @default(false)
  marketingConsent Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("user_applications")
}

model UserActivity {
  id         Int      @id @default(autoincrement())
  sessionId  String
  action     String
  trackId    Int?
  trackTitle String?
  category   String?
  duration   Int?
  userAgent  String?
  ipAddress  String?
  createdAt  DateTime @default(now())

  @@map("user_activities")
}

model Audio {
  id          Int      @id @default(autoincrement())
  title       String
  publishDate DateTime
  filePath    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])

  @@map("audios")
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  isFree Boolean @default(false)
  audios Audio[]

  @@map("categories")
}